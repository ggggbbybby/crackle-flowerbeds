import{objectSpread2 as t}from"../../_virtual/_rollupPluginBabelHelpers.min.mjs";import{Point as n}from"../Point.min.mjs";import{Control as i}from"./Control.min.mjs";import{multiplyTransformMatrices as r}from"../util/misc/matrix.min.mjs";import{wrapWithFireEvent as o}from"./wrapWithFireEvent.min.mjs";import{MODIFY_POLY as m}from"../constants.min.mjs";import"../util/misc/vectors.min.mjs";import"../util/misc/projectStroke/StrokeLineJoinProjections.min.mjs";import"../config.min.mjs";import"../shapes/Group.min.mjs";import{sendPointToPlane as s}from"../util/misc/planeChange.min.mjs";import"../cache.min.mjs";import"../util/path/regex.min.mjs";import"../parser/constants.min.mjs";import"../util/animation/AnimationRegistry.min.mjs";const e=m,a=t=>function(i,o,m){const{points:s,pathOffset:e}=m;return new n(s[t]).subtract(e).transform(r(m.getViewportTransform(),m.calcTransformMatrix()))},p=(t,i,r,o)=>{const{target:m,pointIndex:e}=i,a=m,p=s(new n(r,o),void 0,a.calcOwnMatrix());return a.points[e]=p.add(a.pathOffset),a.setDimensions(),!0},c=(i,r)=>function(o,m,s,e){const a=m.target,p=new n(a.points[(i>0?i:a.points.length)-1]),c=p.subtract(a.pathOffset).transform(a.calcOwnMatrix()),f=r(o,t(t({},m),{},{pointIndex:i}),s,e),l=p.subtract(a.pathOffset).transform(a.calcOwnMatrix()).subtract(c);return a.left-=l.x,a.top-=l.y,f},f=t=>o(e,c(t,p));function l(n){let r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const o={};for(let m=0;m<("number"==typeof n?n:n.points.length);m++)o["p".concat(m)]=new i(t({actionName:e,positionHandler:a(m),actionHandler:f(m)},r));return o}export{f as createPolyActionHandler,l as createPolyControls,a as createPolyPositionHandler,c as factoryPolyActionHandler,p as polyActionHandler};
//# sourceMappingURL=polyControl.min.mjs.map
